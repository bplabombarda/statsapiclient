version: 2.1

executors:
  statsapiclient-executor:
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/statsapiclient

jobs:
  build:
    executor: statsapiclient-executor

    steps:
      - checkout

      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}

      - run:
          name: Install System Dependencies
          command: pip install poetry

      - run:
          name: Install Project Dependencies
          command: poetry install

      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - run:
          name: Run Linter
          command: poetry run flake8 statsapiclient

      - run:
          name: Run Tests
          command: poetry run pytest

      - run:
          name: Build
          command: poetry build

      - run:
          name: Create Workspace
          command: mkdir -p workspace

      - run:
          name: Move files to Workspace
          command: cp -r pyproject.toml poetry.lock dist/ workspace

      - persist_to_workspace:
          root: workspace

          paths:
            - dist/
            - pyproject.toml
            - poetry.lock

  deploy-test:
    executor: statsapiclient-executor

    steps:
      - attach_workspace:
          at: workspace

      - restore_cache:
          keys:
            - deps-{{ checksum "workspace/poetry.lock" }}
            - deps-

      - run:
          name: Config test repo
          command: poetry config repositories.test https://test.pypi.org/legacy/

      - run:
          name: Publish to test.pypi
          command: poetry publish --username "${TEST_PYPI_USERNAME}" --password "${TEST_PYPI_PASSWORD}" --no-interaction

  deploy:
    executor: statsapiclient-executor

    steps:
      - attach_workspace:
          at: workspace

      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}
            - deps-

      - run:
          name: Publish to pypi
          command: poetry publish --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" --no-interaction
          working_directory: workspace

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/

      - approve-test:
          type: approval
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - deploy-test:
          requires:
            - approve-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - approve-prod:
          type: approval
          requires:
           - deploy-test
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/

      - deploy:
          requires:
            - approve-prod
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
