version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/statsapiclient

    steps:
      - checkout

      - restore_cache:
          keys:
            - venv-{{ .Environment.PY_VERSION }}-{{ .Branch }}-{{ checksum "poetry.lock" }}

      - run:
          name: Install System Dependencies
          command: pip install poetry

      - run:
          name: Install Project Dependencies
          command: poetry install

      - save_cache:
          key: venv-{{ .Environment.PY_VERSION }}-{{ .Branch }}-{{ checksum "poetry.lock" }}
          paths:
            - .venv

      - run:
          name: Run Linter
          command: poetry run flake8

      - run:
          name: Run Tests
          command: poetry run pytest

      - run:
          name: Build
          command: poetry build      

  deploy-test:
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/statsapiclient

    steps:
      - run:
          name: Publish to test.pypi
          command: poetry run twine upload --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" --repository-url https://test.pypi.org/legacy/ dist/*

  deploy:
    docker:
      - image: circleci/python:3.8-buster

    working_directory: ~/statsapiclient

    steps:
      - run:
          name: Publish to pypi
          command: poetry publish --build --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" --no-interaction

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                  - /feature-.*/

      - approve-test:
          type: approval
          requires:
           - build

      - deploy-test:
          requires:
            - approve-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - approve-prod:
          type: approval
          requires:
           - deploy-test

      - deploy:
          requires:
            - approve-prod
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
